//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TenisApp
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Tournament.
    /// </summary>
    // *** Start programmer edit section *** (Tournament CustomAttributes)

    // *** End programmer edit section *** (Tournament CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("bpa_TournamentE", new string[] {
            "Name as \'Name\'",
            "StartDate as \'Start date\'",
            "FinishDate as \'Finish date\'",
            "MaxGameScore as \'Max game score\'",
            "MinGamesForWin as \'Min games for win\'"})]
    [AssociatedDetailViewAttribute("bpa_TournamentE", "Challenger", "bpa_ChallengerE", true, "", "Challenger", true, new string[] {
            ""})]
    [AssociatedDetailViewAttribute("bpa_TournamentE", "Toss", "bpa_TossE", true, "", "Toss", true, new string[] {
            ""})]
    [View("bpa_TournamentL", new string[] {
            "Name as \'Name\'",
            "StartDate as \'Start date\'",
            "FinishDate as \'Finish date\'",
            "MaxGameScore as \'Max game score\'",
            "MinGamesForWin as \'Min games for win\'"})]
    [View("TournamentE", new string[] {
            "Name",
            "StartDate",
            "FinishDate",
            "MaxGameScore",
            "MinGamesForWin"})]
    [AssociatedDetailViewAttribute("TournamentE", "Challenger", "ChallengerE", true, "|Претенденты", "Претенденты", true, new string[] {
            ""})]
    [AssociatedDetailViewAttribute("TournamentE", "Toss", "TossE", true, "|Результаты игр", "", true, new string[] {
            ""})]
    [View("TournamentL", new string[] {
            "Name",
            "StartDate",
            "FinishDate"})]
    public class Tournament : ICSSoft.STORMNET.DataObject
    {
        
        private string fName;
        
        private System.DateTime fStartDate;
        
        private System.DateTime fFinishDate;
        
        private int fMaxGameScore;
        
        private int fMinGamesForWin;
        
        private TenisApp.DetailArrayOfChallenger fChallenger;
        
        private TenisApp.DetailArrayOfToss fToss;
        
        // *** Start programmer edit section *** (Tournament CustomMembers)

        // *** End programmer edit section *** (Tournament CustomMembers)

        
        /// <summary>
        /// Name.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.Name CustomAttributes)

        // *** End programmer edit section *** (Tournament.Name CustomAttributes)
        [StrLen(255)]
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.Name Get start)

                // *** End programmer edit section *** (Tournament.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (Tournament.Name Get end)

                // *** End programmer edit section *** (Tournament.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.Name Set start)

                // *** End programmer edit section *** (Tournament.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (Tournament.Name Set end)

                // *** End programmer edit section *** (Tournament.Name Set end)
            }
        }
        
        /// <summary>
        /// StartDate.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.StartDate CustomAttributes)

        // *** End programmer edit section *** (Tournament.StartDate CustomAttributes)
        public virtual System.DateTime StartDate
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.StartDate Get start)

                // *** End programmer edit section *** (Tournament.StartDate Get start)
                System.DateTime result = this.fStartDate;
                // *** Start programmer edit section *** (Tournament.StartDate Get end)

                // *** End programmer edit section *** (Tournament.StartDate Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.StartDate Set start)

                // *** End programmer edit section *** (Tournament.StartDate Set start)
                this.fStartDate = value;
                // *** Start programmer edit section *** (Tournament.StartDate Set end)

                // *** End programmer edit section *** (Tournament.StartDate Set end)
            }
        }
        
        /// <summary>
        /// FinishDate.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.FinishDate CustomAttributes)

        // *** End programmer edit section *** (Tournament.FinishDate CustomAttributes)
        public virtual System.DateTime FinishDate
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.FinishDate Get start)

                // *** End programmer edit section *** (Tournament.FinishDate Get start)
                System.DateTime result = this.fFinishDate;
                // *** Start programmer edit section *** (Tournament.FinishDate Get end)

                // *** End programmer edit section *** (Tournament.FinishDate Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.FinishDate Set start)

                // *** End programmer edit section *** (Tournament.FinishDate Set start)
                this.fFinishDate = value;
                // *** Start programmer edit section *** (Tournament.FinishDate Set end)

                // *** End programmer edit section *** (Tournament.FinishDate Set end)
            }
        }
        
        /// <summary>
        /// MaxGameScore.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.MaxGameScore CustomAttributes)

        // *** End programmer edit section *** (Tournament.MaxGameScore CustomAttributes)
        public virtual int MaxGameScore
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.MaxGameScore Get start)

                // *** End programmer edit section *** (Tournament.MaxGameScore Get start)
                int result = this.fMaxGameScore;
                // *** Start programmer edit section *** (Tournament.MaxGameScore Get end)

                // *** End programmer edit section *** (Tournament.MaxGameScore Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.MaxGameScore Set start)

                // *** End programmer edit section *** (Tournament.MaxGameScore Set start)
                this.fMaxGameScore = value;
                // *** Start programmer edit section *** (Tournament.MaxGameScore Set end)

                // *** End programmer edit section *** (Tournament.MaxGameScore Set end)
            }
        }
        
        /// <summary>
        /// MinGamesForWin.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.MinGamesForWin CustomAttributes)

        // *** End programmer edit section *** (Tournament.MinGamesForWin CustomAttributes)
        public virtual int MinGamesForWin
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.MinGamesForWin Get start)

                // *** End programmer edit section *** (Tournament.MinGamesForWin Get start)
                int result = this.fMinGamesForWin;
                // *** Start programmer edit section *** (Tournament.MinGamesForWin Get end)

                // *** End programmer edit section *** (Tournament.MinGamesForWin Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.MinGamesForWin Set start)

                // *** End programmer edit section *** (Tournament.MinGamesForWin Set start)
                this.fMinGamesForWin = value;
                // *** Start programmer edit section *** (Tournament.MinGamesForWin Set end)

                // *** End programmer edit section *** (Tournament.MinGamesForWin Set end)
            }
        }
        
        /// <summary>
        /// Tournament.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.Challenger CustomAttributes)

        // *** End programmer edit section *** (Tournament.Challenger CustomAttributes)
        public virtual TenisApp.DetailArrayOfChallenger Challenger
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.Challenger Get start)

                // *** End programmer edit section *** (Tournament.Challenger Get start)
                if ((this.fChallenger == null))
                {
                    this.fChallenger = new TenisApp.DetailArrayOfChallenger(this);
                }
                TenisApp.DetailArrayOfChallenger result = this.fChallenger;
                // *** Start programmer edit section *** (Tournament.Challenger Get end)

                // *** End programmer edit section *** (Tournament.Challenger Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.Challenger Set start)

                // *** End programmer edit section *** (Tournament.Challenger Set start)
                this.fChallenger = value;
                // *** Start programmer edit section *** (Tournament.Challenger Set end)

                // *** End programmer edit section *** (Tournament.Challenger Set end)
            }
        }
        
        /// <summary>
        /// Tournament.
        /// </summary>
        // *** Start programmer edit section *** (Tournament.Toss CustomAttributes)

        // *** End programmer edit section *** (Tournament.Toss CustomAttributes)
        public virtual TenisApp.DetailArrayOfToss Toss
        {
            get
            {
                // *** Start programmer edit section *** (Tournament.Toss Get start)

                // *** End programmer edit section *** (Tournament.Toss Get start)
                if ((this.fToss == null))
                {
                    this.fToss = new TenisApp.DetailArrayOfToss(this);
                }
                TenisApp.DetailArrayOfToss result = this.fToss;
                // *** Start programmer edit section *** (Tournament.Toss Get end)

                // *** End programmer edit section *** (Tournament.Toss Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Tournament.Toss Set start)

                // *** End programmer edit section *** (Tournament.Toss Set start)
                this.fToss = value;
                // *** Start programmer edit section *** (Tournament.Toss Set end)

                // *** End programmer edit section *** (Tournament.Toss Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "bpa_TournamentE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View bpa_TournamentE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("bpa_TournamentE", typeof(TenisApp.Tournament));
                }
            }
            
            /// <summary>
            /// "bpa_TournamentL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View bpa_TournamentL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("bpa_TournamentL", typeof(TenisApp.Tournament));
                }
            }
            
            /// <summary>
            /// "TournamentE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View TournamentE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TournamentE", typeof(TenisApp.Tournament));
                }
            }
            
            /// <summary>
            /// "TournamentL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View TournamentL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TournamentL", typeof(TenisApp.Tournament));
                }
            }
        }
    }
}
