//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TenisApp
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Toss.
    /// </summary>
    // *** Start programmer edit section *** (Toss CustomAttributes)

    // *** End programmer edit section *** (Toss CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("bpa_TossE", new string[] {
            "Match as \'Match\'",
            "Match.Name as \'Name\'"}, Hidden=new string[] {
            "Match.Name"})]
    [MasterViewDefineAttribute("bpa_TossE", "Match", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [View("TossE", new string[] {
            "Match.Name",
            "Match.StartDate",
            "Match.ScoreP1",
            "Match.ScoreP2",
            "Match.Player1",
            "Match.Player1.LastName",
            "Match.Player2",
            "Match.Player2.LastName"}, Hidden=new string[] {
            "Match.Player1",
            "Match.Player2"})]
    public class Toss : ICSSoft.STORMNET.DataObject
    {
        
        private TenisApp.Match fMatch;
        
        private TenisApp.Tournament fTournament;
        
        // *** Start programmer edit section *** (Toss CustomMembers)

        // *** End programmer edit section *** (Toss CustomMembers)

        
        /// <summary>
        /// Toss.
        /// </summary>
        // *** Start programmer edit section *** (Toss.Match CustomAttributes)

        // *** End programmer edit section *** (Toss.Match CustomAttributes)
        [PropertyStorage(new string[] {
                "Match"})]
        [NotNull()]
        public virtual TenisApp.Match Match
        {
            get
            {
                // *** Start programmer edit section *** (Toss.Match Get start)

                // *** End programmer edit section *** (Toss.Match Get start)
                TenisApp.Match result = this.fMatch;
                // *** Start programmer edit section *** (Toss.Match Get end)

                // *** End programmer edit section *** (Toss.Match Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Toss.Match Set start)

                // *** End programmer edit section *** (Toss.Match Set start)
                this.fMatch = value;
                // *** Start programmer edit section *** (Toss.Match Set end)

                // *** End programmer edit section *** (Toss.Match Set end)
            }
        }
        
        /// <summary>
        /// мастеровая ссылка на шапку TenisApp.Tournament.
        /// </summary>
        // *** Start programmer edit section *** (Toss.Tournament CustomAttributes)

        // *** End programmer edit section *** (Toss.Tournament CustomAttributes)
        [Agregator()]
        [NotNull()]
        [PropertyStorage(new string[] {
                "Tournament"})]
        public virtual TenisApp.Tournament Tournament
        {
            get
            {
                // *** Start programmer edit section *** (Toss.Tournament Get start)

                // *** End programmer edit section *** (Toss.Tournament Get start)
                TenisApp.Tournament result = this.fTournament;
                // *** Start programmer edit section *** (Toss.Tournament Get end)

                // *** End programmer edit section *** (Toss.Tournament Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Toss.Tournament Set start)

                // *** End programmer edit section *** (Toss.Tournament Set start)
                this.fTournament = value;
                // *** Start programmer edit section *** (Toss.Tournament Set end)

                // *** End programmer edit section *** (Toss.Tournament Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "bpa_TossE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View bpa_TossE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("bpa_TossE", typeof(TenisApp.Toss));
                }
            }
            
            /// <summary>
            /// "TossE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View TossE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TossE", typeof(TenisApp.Toss));
                }
            }
        }
    }
    
    /// <summary>
    /// Detail array of Toss.
    /// </summary>
    // *** Start programmer edit section *** (DetailArrayDetailArrayOfToss CustomAttributes)

    // *** End programmer edit section *** (DetailArrayDetailArrayOfToss CustomAttributes)
    public class DetailArrayOfToss : ICSSoft.STORMNET.DetailArray
    {
        
        // *** Start programmer edit section *** (TenisApp.DetailArrayOfToss members)

        // *** End programmer edit section *** (TenisApp.DetailArrayOfToss members)

        
        /// <summary>
        /// Construct detail array.
        /// </summary>
        /// <summary>
        /// Returns object with type Toss by index.
        /// </summary>
        /// <summary>
        /// Adds object with type Toss.
        /// </summary>
        public DetailArrayOfToss(TenisApp.Tournament fTournament) : 
                base(typeof(Toss), ((ICSSoft.STORMNET.DataObject)(fTournament)))
        {
        }
        
        public TenisApp.Toss this[int index]
        {
            get
            {
                return ((TenisApp.Toss)(this.ItemByIndex(index)));
            }
        }
        
        public virtual void Add(TenisApp.Toss dataobject)
        {
            this.AddObject(((ICSSoft.STORMNET.DataObject)(dataobject)));
        }
    }
}
